{"remainingRequest":"/Users/jicode/__run/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jicode/__run/project/src/views/PostInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jicode/__run/project/src/views/PostInfo.vue","mtime":1673313934753},{"path":"/Users/jicode/__run/project/node_modules/cache-loader/dist/cjs.js","mtime":1672636077197},{"path":"/Users/jicode/__run/project/node_modules/babel-loader/lib/index.js","mtime":1672636077430},{"path":"/Users/jicode/__run/project/node_modules/cache-loader/dist/cjs.js","mtime":1672636077197},{"path":"/Users/jicode/__run/project/node_modules/vue-loader/lib/index.js","mtime":1672636088858}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwoKaW1wb3J0IHtmaXJlYmFzZX0gZnJvbSAnQC9maXJlYmFzZS9maXJlYmFzZUNvbmZpZyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Bvc3RJbmZvJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmJDb2xsZWN0aW9uOiAnYm9hcmQnLAogICAgICBkb2NJZDogdGhpcy4kcm91dGUucGFyYW1zLmlkLAogICAgICByb3c6IHt9LAogICAgICByb3cyOiBbXSwKICAgICAgbWF0Y2g6IGZhbHNlLAogICAgICBjb21tZW50Q29udGVudHM6ICcnLAogICAgICBkYXRlOiAnJywKICAgICAgeWVhcjogJycsCiAgICAgIG1vbnRoOicnLAogICAgICBkYXk6ICcnLAogICAgICBob3VyOiAnJywKICAgICAgbWludXRlOiAnJywKICAgICAgc2Vjb25kOiAnJwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgaW5pdCgpIHsKICAgICAgYXdhaXQgdGhpcy5nZXREYXRhKCkKICAgICAgYXdhaXQgdGhpcy5nZXRDb21tZW50RGF0YSgpCiAgICAgIGF3YWl0IHRoaXMuY2hhbmdlRGF0ZSgpCiAgICB9LAogICAgLy8gY2hhbmdlRGF0ZSgpewogICAgLy8gICB0aGlzLnllYXIgPSB0aGlzLnJvdy50aW1lLmdldEZ1bGxZZWFyKCk7CiAgICAvLyAgIHRoaXMubW9udGggPSB0aGlzLnJvdy50aW1lLmdldE1vbnRoKCkgKyAxOwogICAgLy8gICB0aGlzLmRheSA9IHRoaXMucm93LnRpbWUuZ2V0RGF0ZSgpCiAgICAvLyAgIGNvbnNvbGUubG9nKHRoaXMueWVhcikKICAgIC8vIH0sCiAgICBhc3luYyBnZXREYXRhKCkgewogICAgICBjb25zdCBzZWxmID0gdGhpczsKICAgICAgY29uc3QgZGIgPSBmaXJlYmFzZS5maXJlc3RvcmUoKTsKICAgICAgYXdhaXQgZGIuY29sbGVjdGlvbihzZWxmLmZiQ29sbGVjdGlvbikKICAgICAgICAgIC5kb2ModGhpcy5kb2NJZCkKICAgICAgICAgIC5nZXQoKQogICAgICAgICAgLnRoZW4oYXN5bmMgKHNuYXBzaG90KSA9PiB7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuZG9jSWQpCiAgICAgICAgICAgIGNvbnN0IF9kYXRhID0gc25hcHNob3QuZGF0YSgpOwogICAgICAgICAgICBfZGF0YS5pZCA9IHNuYXBzaG90LmlkIC8v6rCBIOycoOyggCDtlYTrk5zsl5Ag65Sw66GcIGlk6rCS7J20IOyXhuyngOunjCDsnKDsoIAg6rOg7JygIGlk66W8IOu2iOuhnOyYrCDsiJgg7J6I7J2MCiAgICAgICAgICAgIHRoaXMucm93ID0gX2RhdGEKICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5fZGF0YSkKICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy4kc3RvcmUuc3RhdGUudXNlci51aWQpCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKF9kYXRhLnVpZCkKICAgICAgICAgICAgaWYgKHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudWlkID09PSBfZGF0YS51aWQpIHsKICAgICAgICAgICAgICB0aGlzLm1hdGNoID0gdHJ1ZQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudWlkKQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9kYXRhLnVpZCkKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgIH0sCiAgICBnZXRDb21tZW50RGF0YSgpIHsKICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7CiAgICAgIGNvbnN0IGRiID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7CiAgICAgIGRiLmNvbGxlY3Rpb24oJ2NvbW1lbnQnKQogICAgICAgICAgLndoZXJlKCd1aWQnLCAnPT0nLCBzZWxmLnJvdy5pZCkKICAgICAgICAgIC5nZXQoKQogICAgICAgICAgLnRoZW4oKHF1ZXJ5U25hcHNob3QpID0+IHsKICAgICAgICAgICAgaWYgKHF1ZXJ5U25hcHNob3Quc2l6ZSA9PT0gMCkgewogICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaCgoZG9jKSA9PiB7CiAgICAgICAgICAgICAgY29uc3QgX2RhdGEgPSBkb2MuZGF0YSgpOwogICAgICAgICAgICAgIF9kYXRhLmlkID0gZG9jLmlkIC8v6rCBIOycoOyggCDtlYTrk5zsl5Ag65Sw66GcIGlk6rCS7J20IOyXhuyngOunjCDsnKDsoIAg6rOg7JygIGlk66W8IOu2iOuhnOyYrCDsiJgg7J6I7J2MCiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2RhdGEpCiAgICAgICAgICAgICAgc2VsZi5yb3cyLnB1c2goX2RhdGEpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pCiAgICB9LAogICAgZGVsZXRlUG9zdCgpIHsKICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7CiAgICAgIGNvbnN0IGRiID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7CiAgICAgIGRiLmNvbGxlY3Rpb24oc2VsZi5mYkNvbGxlY3Rpb24pCiAgICAgICAgICAuZG9jKHRoaXMuZG9jSWQpCiAgICAgICAgICAuZGVsZXRlKCkKICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgYWxlcnQoIuyCreygnCDsmYTro4wiKQogICAgICAgICAgICBzZWxmLiRyb3V0ZXIucHVzaCgnL2JvYXJkJykKICAgICAgICAgIH0pCiAgICB9LAogICAgZ29Nb2RpZnkoKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMucm93LnRpbWUpCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtuYW1lOiAnUG9zdE1vZGlmeScsIHBhcmFtczoge2lkOiB0aGlzLnJvdy5pZH19KS5jYXRjaCgoKSA9PiB7CiAgICAgIH0pOwogICAgfSwKICAgIHdyaXRlQ29tbWVudCgpIHsKICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7CiAgICAgIGNvbnN0IGRiID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7CiAgICAgIGRiLmNvbGxlY3Rpb24oJ2NvbW1lbnQnKQogICAgICAgICAgLmFkZCh7CiAgICAgICAgICAgIG5hbWU6IHNlbGYuJHN0b3JlLnN0YXRlLnVzZXIuZGlzcGxheU5hbWUsCiAgICAgICAgICAgIGNvbnRlbnRzOiBzZWxmLmNvbW1lbnRDb250ZW50cywKICAgICAgICAgICAgdWlkOiBzZWxmLnJvdy5pZAogICAgICAgICAgfSkKICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgYWxlcnQoIuyekeyEsSDsmYTro4wiKQogICAgICAgICAgICBzZWxmLiRyb3V0ZXIucHVzaCgnL2JvYXJkJykKICAgICAgICAgIH0pCiAgICB9LAogICAgZ29CYWNrKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2JvYXJkJykKICAgIH0sCiAgICBsb2dPdXQoKSB7CiAgICAgIGZpcmViYXNlLmF1dGgoKS5zaWduT3V0KCkKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKQogICAgfSwKICAgIC8vIG1hdGNoU3R1ZGVudCgpewogICAgLy8gICBpZih0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLnVpZCA9PT0gdGhpcy5yb3cudWlkKXsKICAgIC8vICAgICB0aGlzLm1hdGNoID0gdHJ1ZQogICAgLy8gICAgIGNvbnNvbGUubG9nKCLshLHqs7UiKQogICAgLy8gICB9ZWxzZXsKICAgIC8vICAgICB0aGlzLm1hdGNoID0gZmFsc2UKICAgIC8vICAgICBjb25zb2xlLmxvZygi7Iuk7YyoIikKICAgIC8vICAgfQogICAgLy8gfQoKCiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3Qgc2VsZiA9IHRoaXM7CiAgICBzZWxmLmluaXQoKTsKICB9LAogIGNvbXBvbmVudHM6IHt9Cn0K"},{"version":3,"sources":["PostInfo.vue"],"names":[],"mappings":";AA0CA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostInfo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n      <a class=\"navbar-brand\" href=\"#\">학생 관리 시스템</a>\n      <b-button variant=\"danger\" @click=\"logOut\"> 로그아웃</b-button>\n    </nav>\n    {{row.length}}\n    <div v-if=\"Object.keys(row).length> 0\">\n      <h4>제목: {{ row.title }}</h4>\n      <h4>내용: {{ row.contents }}</h4>\n      <h4>작성자: {{ row.student.name }}</h4>\n      <h4>작성 시간: {{ row.time }}</h4>\n    </div>\n\n\n    <!--    <h4>작성자: {{row.uid}}</h4>-->\n    <b-button variant=\"success\" v-if=\"match\" @click=\"goModify\">수정하기</b-button>\n    <b-button variant=\"danger\" v-if=\"match\" @click=\"deletePost\">삭제하기</b-button>\n    <b-button variant=\"primary\" @click=\"goBack\">뒤로가기</b-button>\n\n    <table class=\"table \" border=\"1\" style=\"margin-left: auto; margin-right: auto;\">\n      <thead>\n      <tr>\n        <th>작성자</th>\n        <th>댓글</th>\n      </tr>\n      </thead>\n      <tbody>\n            <tr v-for=\"(row2,i) in row2\" :key=\"i\">\n              <td>{{row2.name}}</td>\n              <td>{{row2.contents}}</td>\n            </tr>\n      </tbody>\n    </table>\n    댓글 작성: <input v-model=\"commentContents\">\n    <b-button variant=\"success\" @click=\"writeComment\">작성완료</b-button>\n\n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nimport {firebase} from '@/firebase/firebaseConfig';\n\nexport default {\n  name: 'PostInfo',\n  data() {\n    return {\n      fbCollection: 'board',\n      docId: this.$route.params.id,\n      row: {},\n      row2: [],\n      match: false,\n      commentContents: '',\n      date: '',\n      year: '',\n      month:'',\n      day: '',\n      hour: '',\n      minute: '',\n      second: ''\n    }\n  },\n  methods: {\n    async init() {\n      await this.getData()\n      await this.getCommentData()\n      await this.changeDate()\n    },\n    // changeDate(){\n    //   this.year = this.row.time.getFullYear();\n    //   this.month = this.row.time.getMonth() + 1;\n    //   this.day = this.row.time.getDate()\n    //   console.log(this.year)\n    // },\n    async getData() {\n      const self = this;\n      const db = firebase.firestore();\n      await db.collection(self.fbCollection)\n          .doc(this.docId)\n          .get()\n          .then(async (snapshot) => {\n            // console.log(this.docId)\n            const _data = snapshot.data();\n            _data.id = snapshot.id //각 유저 필드에 따로 id값이 없지만 유저 고유 id를 불로올 수 있음\n            this.row = _data\n            // console.log(this._data)\n            // console.log(this.$store.state.user.uid)\n            // console.log(_data.uid)\n            if (this.$store.state.user.uid === _data.uid) {\n              this.match = true\n              console.log(this.$store.state.user.uid)\n              console.log(_data.uid)\n            }\n          })\n    },\n    getCommentData() {\n      const self = this;\n      const db = firebase.firestore();\n      db.collection('comment')\n          .where('uid', '==', self.row.id)\n          .get()\n          .then((querySnapshot) => {\n            if (querySnapshot.size === 0) {\n              return\n            }\n            querySnapshot.forEach((doc) => {\n              const _data = doc.data();\n              _data.id = doc.id //각 유저 필드에 따로 id값이 없지만 유저 고유 id를 불로올 수 있음\n              console.log(_data)\n              self.row2.push(_data);\n            });\n          })\n    },\n    deletePost() {\n      const self = this;\n      const db = firebase.firestore();\n      db.collection(self.fbCollection)\n          .doc(this.docId)\n          .delete()\n          .then(() => {\n            alert(\"삭제 완료\")\n            self.$router.push('/board')\n          })\n    },\n    goModify() {\n      console.log(this.row.time)\n      this.$router.push({name: 'PostModify', params: {id: this.row.id}}).catch(() => {\n      });\n    },\n    writeComment() {\n      const self = this;\n      const db = firebase.firestore();\n      db.collection('comment')\n          .add({\n            name: self.$store.state.user.displayName,\n            contents: self.commentContents,\n            uid: self.row.id\n          })\n          .then(() => {\n            alert(\"작성 완료\")\n            self.$router.push('/board')\n          })\n    },\n    goBack() {\n      this.$router.push('/board')\n    },\n    logOut() {\n      firebase.auth().signOut()\n      this.$router.push('/')\n    },\n    // matchStudent(){\n    //   if(this.$store.state.user.uid === this.row.uid){\n    //     this.match = true\n    //     console.log(\"성공\")\n    //   }else{\n    //     this.match = false\n    //     console.log(\"실패\")\n    //   }\n    // }\n\n\n  },\n  mounted() {\n    const self = this;\n    self.init();\n  },\n  components: {}\n}\n</script>\n"]}]}