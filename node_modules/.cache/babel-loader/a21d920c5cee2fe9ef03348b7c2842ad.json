{"remainingRequest":"/Users/jicode/__run/project/node_modules/babel-loader/lib/index.js!/Users/jicode/__run/project/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jicode/__run/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jicode/__run/project/src/views/PostInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jicode/__run/project/src/views/PostInfo.vue","mtime":1673313934753},{"path":"/Users/jicode/__run/project/babel.config.js","mtime":1626842806000},{"path":"/Users/jicode/__run/project/node_modules/cache-loader/dist/cjs.js","mtime":1672636077197},{"path":"/Users/jicode/__run/project/node_modules/babel-loader/lib/index.js","mtime":1672636077430},{"path":"/Users/jicode/__run/project/node_modules/cache-loader/dist/cjs.js","mtime":1672636077197},{"path":"/Users/jicode/__run/project/node_modules/vue-loader/lib/index.js","mtime":1672636088858}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL2ppY29kZS9fX3J1bi9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2ppY29kZS9fX3J1bi9wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwovLyBAIGlzIGFuIGFsaWFzIHRvIC9zcmMKCmltcG9ydCB7IGZpcmViYXNlIH0gZnJvbSAnQC9maXJlYmFzZS9maXJlYmFzZUNvbmZpZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9zdEluZm8nLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmYkNvbGxlY3Rpb246ICdib2FyZCcsCiAgICAgIGRvY0lkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgIHJvdzoge30sCiAgICAgIHJvdzI6IFtdLAogICAgICBtYXRjaDogZmFsc2UsCiAgICAgIGNvbW1lbnRDb250ZW50czogJycsCiAgICAgIGRhdGU6ICcnLAogICAgICB5ZWFyOiAnJywKICAgICAgbW9udGg6ICcnLAogICAgICBkYXk6ICcnLAogICAgICBob3VyOiAnJywKICAgICAgbWludXRlOiAnJywKICAgICAgc2Vjb25kOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmdldERhdGEoKTsKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy5nZXRDb21tZW50RGF0YSgpOwogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmNoYW5nZURhdGUoKTsKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIGNoYW5nZURhdGUoKXsKICAgIC8vICAgdGhpcy55ZWFyID0gdGhpcy5yb3cudGltZS5nZXRGdWxsWWVhcigpOwogICAgLy8gICB0aGlzLm1vbnRoID0gdGhpcy5yb3cudGltZS5nZXRNb250aCgpICsgMTsKICAgIC8vICAgdGhpcy5kYXkgPSB0aGlzLnJvdy50aW1lLmdldERhdGUoKQogICAgLy8gICBjb25zb2xlLmxvZyh0aGlzLnllYXIpCiAgICAvLyB9LAogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBzZWxmLCBkYjsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgc2VsZiA9IF90aGlzMjsKICAgICAgICAgICAgICBkYiA9IGZpcmViYXNlLmZpcmVzdG9yZSgpOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gZGIuY29sbGVjdGlvbihzZWxmLmZiQ29sbGVjdGlvbikuZG9jKF90aGlzMi5kb2NJZCkuZ2V0KCkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMihzbmFwc2hvdCkgewogICAgICAgICAgICAgICAgICB2YXIgX2RhdGE7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmRvY0lkKQogICAgICAgICAgICAgICAgICAgICAgICBfZGF0YSA9IHNuYXBzaG90LmRhdGEoKTsKICAgICAgICAgICAgICAgICAgICAgICAgX2RhdGEuaWQgPSBzbmFwc2hvdC5pZDsgLy/qsIEg7Jyg7KCAIO2VhOuTnOyXkCDrlLDroZwgaWTqsJLsnbQg7JeG7KeA66eMIOycoOyggCDqs6DsnKAgaWTrpbwg67aI66Gc7JisIOyImCDsnojsnYwKICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLnJvdyA9IF9kYXRhOwogICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLl9kYXRhKQogICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLnVpZCkKICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coX2RhdGEudWlkKQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMyLiRzdG9yZS5zdGF0ZS51c2VyLnVpZCA9PT0gX2RhdGEudWlkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLm1hdGNoID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpczIuJHN0b3JlLnN0YXRlLnVzZXIudWlkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfZGF0YS51aWQpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfSgpKTsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0Q29tbWVudERhdGE6IGZ1bmN0aW9uIGdldENvbW1lbnREYXRhKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBkYiA9IGZpcmViYXNlLmZpcmVzdG9yZSgpOwogICAgICBkYi5jb2xsZWN0aW9uKCdjb21tZW50Jykud2hlcmUoJ3VpZCcsICc9PScsIHNlbGYucm93LmlkKS5nZXQoKS50aGVuKGZ1bmN0aW9uIChxdWVyeVNuYXBzaG90KSB7CiAgICAgICAgaWYgKHF1ZXJ5U25hcHNob3Quc2l6ZSA9PT0gMCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBxdWVyeVNuYXBzaG90LmZvckVhY2goZnVuY3Rpb24gKGRvYykgewogICAgICAgICAgdmFyIF9kYXRhID0gZG9jLmRhdGEoKTsKICAgICAgICAgIF9kYXRhLmlkID0gZG9jLmlkOyAvL+qwgSDsnKDsoIAg7ZWE65Oc7JeQIOuUsOuhnCBpZOqwkuydtCDsl4bsp4Drp4wg7Jyg7KCAIOqzoOycoCBpZOulvCDrtojroZzsmKwg7IiYIOyeiOydjAogICAgICAgICAgY29uc29sZS5sb2coX2RhdGEpOwogICAgICAgICAgc2VsZi5yb3cyLnB1c2goX2RhdGEpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVQb3N0OiBmdW5jdGlvbiBkZWxldGVQb3N0KCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBkYiA9IGZpcmViYXNlLmZpcmVzdG9yZSgpOwogICAgICBkYi5jb2xsZWN0aW9uKHNlbGYuZmJDb2xsZWN0aW9uKS5kb2ModGhpcy5kb2NJZCkuZGVsZXRlKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgYWxlcnQoIuyCreygnCDsmYTro4wiKTsKICAgICAgICBzZWxmLiRyb3V0ZXIucHVzaCgnL2JvYXJkJyk7CiAgICAgIH0pOwogICAgfSwKICAgIGdvTW9kaWZ5OiBmdW5jdGlvbiBnb01vZGlmeSgpIHsKICAgICAgY29uc29sZS5sb2codGhpcy5yb3cudGltZSk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnUG9zdE1vZGlmeScsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBpZDogdGhpcy5yb3cuaWQKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHt9KTsKICAgIH0sCiAgICB3cml0ZUNvbW1lbnQ6IGZ1bmN0aW9uIHdyaXRlQ29tbWVudCgpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICB2YXIgZGIgPSBmaXJlYmFzZS5maXJlc3RvcmUoKTsKICAgICAgZGIuY29sbGVjdGlvbignY29tbWVudCcpLmFkZCh7CiAgICAgICAgbmFtZTogc2VsZi4kc3RvcmUuc3RhdGUudXNlci5kaXNwbGF5TmFtZSwKICAgICAgICBjb250ZW50czogc2VsZi5jb21tZW50Q29udGVudHMsCiAgICAgICAgdWlkOiBzZWxmLnJvdy5pZAogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBhbGVydCgi7J6R7ISxIOyZhOujjCIpOwogICAgICAgIHNlbGYuJHJvdXRlci5wdXNoKCcvYm9hcmQnKTsKICAgICAgfSk7CiAgICB9LAogICAgZ29CYWNrOiBmdW5jdGlvbiBnb0JhY2soKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvYm9hcmQnKTsKICAgIH0sCiAgICBsb2dPdXQ6IGZ1bmN0aW9uIGxvZ091dCgpIHsKICAgICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25PdXQoKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKTsKICAgIH0gLy8gbWF0Y2hTdHVkZW50KCl7CiAgICAvLyAgIGlmKHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudWlkID09PSB0aGlzLnJvdy51aWQpewogICAgLy8gICAgIHRoaXMubWF0Y2ggPSB0cnVlCiAgICAvLyAgICAgY29uc29sZS5sb2coIuyEseqztSIpCiAgICAvLyAgIH1lbHNlewogICAgLy8gICAgIHRoaXMubWF0Y2ggPSBmYWxzZQogICAgLy8gICAgIGNvbnNvbGUubG9nKCLsi6TtjKgiKQogICAgLy8gICB9CiAgICAvLyB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgc2VsZi5pbml0KCk7CiAgfSwKICBjb21wb25lbnRzOiB7fQp9Ow=="},{"version":3,"mappings":";;;;;;;AA0CA;;AAEA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACA;YAAA;cAAA;cAAA,OACA;YAAA;cAAA;cAAA,OACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACAC;cACAC;cAAA;cAAA,OACAA,iCACAC,kBACAC,MACAC;gBAAA;kBAAA;kBAAA;oBAAA;sBAAA;wBACA;wBACAC;wBACAA;wBACA;wBACA;wBACA;wBACA;wBACA;0BACA;0BACAC;0BACAA;wBACA;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA,CACA;gBAAA;kBAAA;gBAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MACA;MACA;MACAN,yBACAO,gCACAL,MACAC;QACA;UACA;QACA;QACAK;UACA;UACAJ;UACAC;UACAN;QACA;MACA;IACA;IACAU;MACA;MACA;MACAT,iCACAC,gBACAS,SACAP;QACAQ;QACAZ;MACA;IACA;IACAa;MACAP;MACA;QAAAxB;QAAAgC;UAAAC;QAAA;MAAA,sBACA;IACA;IACAC;MACA;MACA;MACAf,yBACAgB;QACAnC;QACAoC;QACAC;MACA,GACAf;QACAQ;QACAZ;MACA;IACA;IACAoB;MACA;IACA;IACAC;MACAC;MACA;IACA,EACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGA;EACAC;IACA;IACAvB;EACA;EACAwB;AACA","names":["name","data","fbCollection","docId","row","row2","match","commentContents","date","year","month","day","hour","minute","second","methods","init","getData","self","db","doc","get","then","_data","console","getCommentData","where","querySnapshot","deletePost","delete","alert","goModify","params","id","writeComment","add","contents","uid","goBack","logOut","firebase","mounted","components"],"sourceRoot":"src/views","sources":["PostInfo.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n      <a class=\"navbar-brand\" href=\"#\">학생 관리 시스템</a>\n      <b-button variant=\"danger\" @click=\"logOut\"> 로그아웃</b-button>\n    </nav>\n    {{row.length}}\n    <div v-if=\"Object.keys(row).length> 0\">\n      <h4>제목: {{ row.title }}</h4>\n      <h4>내용: {{ row.contents }}</h4>\n      <h4>작성자: {{ row.student.name }}</h4>\n      <h4>작성 시간: {{ row.time }}</h4>\n    </div>\n\n\n    <!--    <h4>작성자: {{row.uid}}</h4>-->\n    <b-button variant=\"success\" v-if=\"match\" @click=\"goModify\">수정하기</b-button>\n    <b-button variant=\"danger\" v-if=\"match\" @click=\"deletePost\">삭제하기</b-button>\n    <b-button variant=\"primary\" @click=\"goBack\">뒤로가기</b-button>\n\n    <table class=\"table \" border=\"1\" style=\"margin-left: auto; margin-right: auto;\">\n      <thead>\n      <tr>\n        <th>작성자</th>\n        <th>댓글</th>\n      </tr>\n      </thead>\n      <tbody>\n            <tr v-for=\"(row2,i) in row2\" :key=\"i\">\n              <td>{{row2.name}}</td>\n              <td>{{row2.contents}}</td>\n            </tr>\n      </tbody>\n    </table>\n    댓글 작성: <input v-model=\"commentContents\">\n    <b-button variant=\"success\" @click=\"writeComment\">작성완료</b-button>\n\n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nimport {firebase} from '@/firebase/firebaseConfig';\n\nexport default {\n  name: 'PostInfo',\n  data() {\n    return {\n      fbCollection: 'board',\n      docId: this.$route.params.id,\n      row: {},\n      row2: [],\n      match: false,\n      commentContents: '',\n      date: '',\n      year: '',\n      month:'',\n      day: '',\n      hour: '',\n      minute: '',\n      second: ''\n    }\n  },\n  methods: {\n    async init() {\n      await this.getData()\n      await this.getCommentData()\n      await this.changeDate()\n    },\n    // changeDate(){\n    //   this.year = this.row.time.getFullYear();\n    //   this.month = this.row.time.getMonth() + 1;\n    //   this.day = this.row.time.getDate()\n    //   console.log(this.year)\n    // },\n    async getData() {\n      const self = this;\n      const db = firebase.firestore();\n      await db.collection(self.fbCollection)\n          .doc(this.docId)\n          .get()\n          .then(async (snapshot) => {\n            // console.log(this.docId)\n            const _data = snapshot.data();\n            _data.id = snapshot.id //각 유저 필드에 따로 id값이 없지만 유저 고유 id를 불로올 수 있음\n            this.row = _data\n            // console.log(this._data)\n            // console.log(this.$store.state.user.uid)\n            // console.log(_data.uid)\n            if (this.$store.state.user.uid === _data.uid) {\n              this.match = true\n              console.log(this.$store.state.user.uid)\n              console.log(_data.uid)\n            }\n          })\n    },\n    getCommentData() {\n      const self = this;\n      const db = firebase.firestore();\n      db.collection('comment')\n          .where('uid', '==', self.row.id)\n          .get()\n          .then((querySnapshot) => {\n            if (querySnapshot.size === 0) {\n              return\n            }\n            querySnapshot.forEach((doc) => {\n              const _data = doc.data();\n              _data.id = doc.id //각 유저 필드에 따로 id값이 없지만 유저 고유 id를 불로올 수 있음\n              console.log(_data)\n              self.row2.push(_data);\n            });\n          })\n    },\n    deletePost() {\n      const self = this;\n      const db = firebase.firestore();\n      db.collection(self.fbCollection)\n          .doc(this.docId)\n          .delete()\n          .then(() => {\n            alert(\"삭제 완료\")\n            self.$router.push('/board')\n          })\n    },\n    goModify() {\n      console.log(this.row.time)\n      this.$router.push({name: 'PostModify', params: {id: this.row.id}}).catch(() => {\n      });\n    },\n    writeComment() {\n      const self = this;\n      const db = firebase.firestore();\n      db.collection('comment')\n          .add({\n            name: self.$store.state.user.displayName,\n            contents: self.commentContents,\n            uid: self.row.id\n          })\n          .then(() => {\n            alert(\"작성 완료\")\n            self.$router.push('/board')\n          })\n    },\n    goBack() {\n      this.$router.push('/board')\n    },\n    logOut() {\n      firebase.auth().signOut()\n      this.$router.push('/')\n    },\n    // matchStudent(){\n    //   if(this.$store.state.user.uid === this.row.uid){\n    //     this.match = true\n    //     console.log(\"성공\")\n    //   }else{\n    //     this.match = false\n    //     console.log(\"실패\")\n    //   }\n    // }\n\n\n  },\n  mounted() {\n    const self = this;\n    self.init();\n  },\n  components: {}\n}\n</script>\n"]}]}